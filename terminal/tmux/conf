# vim: ft=tmux

# =============================================================================
# ********************************** GENERAL **********************************
# =============================================================================

# Use default $SHELL instead of a login shell
set -g default-command $SHELL

set -g default-terminal "alacritty"

# Shorter wait
set -sg escape-time 0

# Change the prefix key from ctrl-b to ctrl-s
unbind C-b
set -g prefix C-s

# Larger scrollback
set-option -g history-limit 100000


# On double ctrl-s we send it to the running process
bind-key -r C-s send-prefix

# Copy n paste
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Use ctrl-s + r to source the config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# True color support for Osx and Linux
if-shell 'uname | grep -q Darwin' \
    'source-file ~/.tmux.conf.osx' \
    'if-shell "uname | grep -q CYGWIN" "source-file ~/.tmux.conf.cygwin" "source-file ~/.tmux.conf.linux"'



# =============================================================================
# *********************************** PANES ***********************************
# =============================================================================

# Kill panes without confirmation
bind-key x kill-pane


# Create panes at the current panes path
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key - if-shell "$is_vim" "send-keys ,o" \; split-window -v -c '#{pane_current_path}'
bind-key \\ if-shell "$is_vim" "send-keys ,o" \; split-window -h -c '#{pane_current_path}'

set -g focus-events on
set-hook -g pane-focus-in "if-shell '$is_vim' 'run ~/dotfiles/terminal/tmux/focus.sh'"

# Smart pane switching with awareness of Vim splits, the -n flag indicates we dont want to use the prefix
bind -n C-h if-shell "([ $(tmux display-message -p '#{pane_at_left}') -ne 1 ] || [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ]) && $is_vim" "send-keys ,o" \; if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-l if-shell "([ $(tmux display-message -p '#{pane_at_left}') -ne 1 ] || [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ]) && $is_vim" "send-keys ,o" \; if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-k if-shell "([ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ] || [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ]) && $is_vim" "send-keys ,o" \; if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-j if-shell "([ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ] || [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ]) && $is_vim" "send-keys ,o" \; if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l


# Resize panes, shift arrow keys for smaller increments and control arrow key for larger
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"



# =============================================================================
# ********************************** WINDOWS **********************************
# =============================================================================

# New windows opens at the path of the pane
bind c new-window -c '#{pane_current_path}'

# Dont index windows from 0, start at 1
set-option -g base-index 1

# Automatically renumber the windows to follow this rule
set-option -g renumber-windows on

# Move current pane to a new window but keep focus on this window
bind-key b break-pane -d



# =============================================================================
# ********************************** SESSIONS *********************************
# =============================================================================

# Use fzf to display a list of all sessions and then open the seleted session in a new window
bind C-j popup -KER "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Choose tree lets us switch between sessions, o for open-session
# bind C-o choose-session
bind C-o split-window -v "cat ~/.z | sort -t '|' -k 2 -n -r | awk -F'|' '{print $1}' | awk -F/ '{print$NF}' | fzf | while read -r i; do z '$i'; done; tat;"

# This quits the current session and breaks out to a new one
bind-key C-b send-keys 'tat && exit' 'C-m'

# This kills the current session and switches to a previous one, if there are no more sessions it exits to the shell
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# This makes ctrl-s followed by w open up vim with fzf ready to find a file -c is for command
bind-key w split-window -h -c ~/code/c.conner/docs "nvim +FzfFiles"
bind-key -T prefix v switch-client -T prefix_v
bind-key -T prefix_v G split-window -v -c '#{pane_current_path}'



# =============================================================================
# ******************************** STATUS BAR *********************************
# =============================================================================
set -g status-left-length 50
set -g status-right-length 150
set -g status-style "bg=black"
set -g status-left "#[fg=#14212f,bg=#ffa857,nobold] #S #[fg=#ffa857,bg=default,nobold,noitalics,nounderscore]"

STATS_CPU="#[fg=#c690e9,bg=#252837,nobold,noitalics,nounderscore]#[fg=#14212f,bg=#c690e9]#{sysstat_cpu}"
STATS_MEM="#[fg=#8095ff,bg=#252837,nobold,noitalics,nounderscore]#[fg=#14212f,bg=#8095ff]#{sysstat_mem}"
YY_MM_DD="#[fg=#ffa857,bg=#252837]#[fg=#14212f,bg=#ffa857] %Y-%m-%d "
H_M="#[fg=#ffcb6b,bg=#252837]#[fg=#14212f,bg=#ffcb6b] %H:%M "
set -g status-right "$STATS_CPU$STATS_MEM$YY_MM_DD$H_M"


set -g window-status-format "#[fg=colour235,bg=#184267,nobold,noitalics,nounderscore] #[fg=#54708c,bg=#184267 ]#I #[fg=#54708c,bg=#184267,nobold,noitalics,nounderscore] #[fg=#54708c,bg=#184267]#W #F #[fg=#184267,bg=default,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=colour235,bg=#8095ff,nobold,noitalics,nounderscore] #[fg=#e2edf8,bg=#8095ff]#I #[fg=#e2edf8,bg=#8095ff,nobold,noitalics,nounderscore] #[fg=#e2edf8,bg=#8095ff]#W #F #[fg=#8095ff,bg=default,nobold,noitalics,nounderscore]"
set -g window-status-separator ""
set -g monitor-activity off
set -g @sysstat_mem_color_low "#c3e88d"
set -g @sysstat_cpu_color_low "#c3e88d"

set -g @sysstat_mem_view_tmpl ' #[fg=#14212f,nobold]#{mem.used} / #[fg=#14212f,nobold]#{mem.total} '
set -g @sysstat_cpu_view_tmpl ' #[fg=#14212f,nobold]#{cpu.pused} '

# Set the foreground/background color for the active window
setw -g window-active-style "fg=default,bg=#162534"
setw -g pane-active-border-style "fg=#14212f,bg=#14212f"
# Set the foreground/background color for all other windows
setw -g window-style "fg=default,bg=#14212f"
setw -g pane-border-style "fg=#14212f,bg=#14212f"
set -g status-bg "#14212f" # For the status bar



# =============================================================================
# ********************************* PLUGINS ***********************************
# =============================================================================
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

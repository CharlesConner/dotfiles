# Use default $SHELL instead of a login shell
set -g default-command $SHELL
# Shorter wait
set -sg escape-time 0

# Change the prefix key from ctrl-b to ctrl-s
unbind C-b
set -g prefix C-s


# On double ctrl-s we send it to the running process
# bind-key -r C-s send-prefix


# set -g mouse on
# sane scrolling:
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Copy n paste
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Use ctrl-s + r to source the config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'


# **************** PANES *******************

# Kill panes without confirmation
bind-key x kill-pane


# Create panes at the current panes path
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Move between panes, the -n flag indicates we dont want to use the prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


# Resize panes, shift arrow keys for smaller increments and control arrow key for larger
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"



# **************** WINDOWS *******************

# New windows opens at the path of the pane
bind c new-window -c '#{pane_current_path}'

# Dont index windows from 0, start at 1
set-option -g base-index 1

# Automatically renumber the windows to follow this rule
set-option -g renumber-windows on

# Move current pane to a new window but keep focus on this window
bind-key b break-pane -d






# **************** SESSIONS *******************

# Use fzf to display a list of all sessions and then open the seleted session in a new window
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Choose tree lets us switch between sessions, o for open-session
# bind C-o choose-session
bind C-o split-window -v "cat ~/.z | sort -t '|' -k 2 -n -r | awk -F'|' '{print $1}' | awk -F/ '{print$NF}' | fzf | while read -r i; do z '$i'; done; tat;"

# This quits the current session and breaks out to a new one
bind-key C-b send-keys 'tat && exit' 'C-m'

# This kills the current session and switches to a previous one, if there are no more sessions it exits to the shell
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'









# This makes ctrl-s followed by w open up vim with fzf ready to find a file -c is for command
# bind-key w split-window -h -c ~/my-wiki "vim +FZF"





# Use the xterm-256color terminal and then apply it
# set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"

# Disable the default status bar from nord theme
set -g @nord_tmux_show_status_content "0"

# https://github.com/arcticicestudio/nord-tmux/issues/35
set -g @prefix_highlight_output_prefix "#[fg=brightcyan]#[bg=black]#[nobold]#[noitalics]#[nounderscore]#[bg=brightcyan]#[fg=black]"
set -g @prefix_highlight_output_suffix ""
set -g @prefix_highlight_copy_mode_attr "fg=brightcyan,bg=black,bold"




set -g status-left-length 50
set -g status-right-length 150
set -g status-left "#[fg=black,bg=blue,bold] #S #[fg=blue,bg=black,nobold,noitalics,nounderscore]"
set -g status-right "#{prefix_highlight}#[fg=brightblack,bg=black,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack]#{sysstat_cpu}#[fg=white,bg=brightblack] #[fg=white,bg=brightblack] #{sysstat_mem}#[fg=white,bg=brightblack] #[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore]#[fg=black,bg=cyan,bold] #H "

set -g window-status-format "#[fg=black,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W #F #[fg=brightblack,bg=black,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#W #F #[fg=cyan,bg=black,nobold,noitalics,nounderscore]"
set -g window-status-separator ""
set -g @sysstat_mem_color_low "cyan"
set -g @sysstat_cpu_color_low "cyan"


# Plugins
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'tonylambiris/palenight-tmux'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

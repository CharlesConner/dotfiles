set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# Shorter wait
set -sg escape-time 0

# Change the prefix key from ctrl-b to ctrl-s
unbind C-b
set -g prefix C-s
# On double ctrl-s we send it to the running process
# bind-key -r C-s send-prefix

# Use ctrl-s + r to source the config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"




# **************** PANES *******************

# Create panes at the current panes path
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Move between panes, the -n flag indicates we dont want to use the prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


# Resize panes, shift arrow keys for smaller increments and control arrow key for larger
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"




# **************** WINDOWS *******************

# New windows opens at the path of the pane
bind c new-window -c '#{pane_current_path}'

# Dont index windows from 0, start at 1
set-option -g base-index 1

# Automatically renumber the windows to follow this rule
set-option -g renumber-windows on

# Move current pane to a new window but keep focus on this window
bind-key b break-pane -d






# **************** SESSIONS *******************

# Use fzf to display a list of all sessions and then open the seleted session in a new window
# To get this working i had to do sudo ln -sfn /home/conner/.fzf/bin/fzf /usr/bin/fzf
# because fzf is installed by vim and only to my user its not available when this runs
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Choose tree lets us switch between sessions, o for open-session
bind C-o choose-session

# This quits the current session and breaks out to a new one
bind-key C-b send-keys 'tat && exit' 'C-m'

# This kills the current session and switches to a previous one, if there are no more sessions it exits to the shell
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'









# This makes ctrl-s followed by w open up vim with fzf ready to find a file -c is for command
# bind-key w split-window -h -c ~/my-wiki "vim +FZF"





# Use the xterm-256color terminal and then apply it
# set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"


# Make it so the status bar can display up to 50 characters of the session name
set -g status-left-length 50

# Plugins
set -g @plugin 'arcticicestudio/nord-tmux'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
